name: Microservice pipeline App
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      destroy:
        description: "Destroy Resources"
        required: true
        default: "no"

jobs:
  containerization:
    runs-on: ubuntu-latest
    steps:
      - name: checkout config files
        uses: actions/checkout@v2
      - name: docker hub login
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: install Dependencies
        run: |
          chmod +x install_dep.sh
          ./install_dep.sh
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          tags: ${{ vars.DOCKERHUB_USERNAME }}/micro-app:${{ github.sha }}
      - name: Docker image Test
        run: |
          docker images
          docker run --name micro-app -d -p 5000:5000 ${{ vars.DOCKERHUB_USERNAME }}/micro-app:${{ github.sha }}
          export IP=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' micro-app)
          echo $IP

  terraform:
    name: terraform deployment
    runs-on: ubuntu-latest
    needs: containerization
    environment: production
    steps:
      - name: checkout config files
        uses: actions/checkout@v2
      - name: setup terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.4.4
      - name: terraform init
        run: terraform init
        working-directory: ./Terraform
      
      - name: terraform plan
        run: terraform plan
        working-directory: ./Terraform

      - name: terraform apply or destroy
        run: |
          if [ "${{ github.event.inputs.destroy }}" = "yes" ]; then
            terraform destroy -auto-approve
          else
            terraform apply -auto-approve
          fi
        working-directory: ./Terraform

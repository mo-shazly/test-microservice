name: Microservice pipeline App
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      destroy:
        description: "Destroy Resources"
        required: true
        default: "no"

jobs:
  terraform:
    name: terraform deployment
    runs-on: ubuntu-latest
    
    environment: production
    steps:
      - name: checkout config files
        uses: actions/checkout@v2

      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: setup terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.4.4
      - name: terraform init
        run: terraform init
        working-directory: ./Terraform
      
      - name: terraform plan
        run: terraform plan
        working-directory: ./Terraform

      - name: terraform apply or destroy
        run: |
          if [ "${{ github.event.inputs.destroy }}" = "yes" ]; then
            terraform destroy -auto-approve
          else
            terraform apply -auto-approve
          fi
        working-directory: ./Terraform
   
  deploy:
    name: Deploy to EKS
    runs-on: ubuntu-latest
    needs: terraform
    steps:
      - name: Checkout Kubernetes Manifests
        uses: actions/checkout@v2

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Update kubeconfig
        run: |
          aws eks --region us-west-2 update-kubeconfig --name stage_eks

      - name: Deploy Kubernetes Manifests
        run: |
          kubectl apply -f deployment.yml  
          kubectl apply -f service.yml
        working-directory: ./kubernetes

      - name: Verify Deployment
        run: |
          kubectl get pods  

name: Microservice pipeline App
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
    terraform:
      name: terraform deployment
      runs-on: ubuntu-latest
      steps:
          - name: checkout config files
            uses: actions/checkout@v2

          - name: setup terraform 
            uses: hashicorp/setup-terraform@v3.1.2

          - name: "Configure AWS Credentials" 
            uses: aws-actions/configure-aws-credentials@v4.0.2
            with:
              aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
              aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
              aws-region: us-west-2
        

          - name: Terraform init
            run: terraform init
            working-directory: ./Terraform

          - name: setup ssh private key
            run: |
              ls -la
              mkdir ~/.ssh
              
              echo "${{ secrets.ID_RSA }}" > ~/.ssh/id_rsa
              echo "${{ secrets.ID_RSA_PUB }}" > ~/.ssh/id_rsa.pub
              chmod 600 ~/.ssh/id_rsa
              chmod 600 ~/.ssh/id_rsa.pub
              ls -la ~/.ssh
              

          - name: validate
            run: terraform validate 
            
          - name: terraform Plan
            run: terraform plan -var-file="terraform.tfvars"
            working-directory: ./Terraform

          #- name: terraform apply
           # run: terraform apply -auto-approve
            #working-directory: ./Terraform

          #- name: terraform destroy
           #run: terraform destroy
            #working-directory: ./Terraform

          - name: Set up kubectl
            uses: azure/setup-kubectl@v1
            with:
              version: 'latest'
   
          - name: Update kubeconfig for EKS cluster
            run: |
                 aws eks --region us-west-2 update-kubeconfig --name eks-cluster
           
          - name: Deploy to Kubernetes using kubectl
            run: |
                 kubectl apply -f k8s/deployment.yaml
                 kubectl apply -f k8s/service.yaml
    
    
  

